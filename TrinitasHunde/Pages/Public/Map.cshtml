@page
@model TrinitasHunde.Pages.Public.MapModel
@{
    ViewData["Title"] = "Map";
}

<h2>Map</h2>

<!-- Radio buttons for map search options -->
<div class="row">
    <div class="col-sm-6">
        <form asp-page-handler="SearchPinType" method="post">
            <p>Vælg en pin type:</p>
            @foreach (PinType pinType in Model.PinTypes)
            {
                <input type="radio" name="pinType" value="@pinType.ID" /> @pinType.Name <br />
            }
            <button class="btn btn-default">Søg pin type</button>
        </form>
    </div>
    <div class="col-sm-6">
        <form asp-page-handler="SearchLocationType" method="post">
            <p>Vælg en lokation type:</p>
            @foreach (LocationType locationType in Model.LocationTypes)
            {
                <input type="radio" name="locationType" value="@locationType.ID" /> @locationType.Name <br />
            }
            <button class="btn btn-default">Søg lokation type</button>
        </form>
    </div>
</div>
<br />

<!-- Container for google maps -->
<div id="mapContainer" style="width:100%;height:800px;"></div>

@section Scripts {
    <!-- Import google maps (add api key here) -->
    <script src="https://maps.googleapis.com/maps/api/js"></script>

    <!-- Initialize google maps -->
    <script type="text/javascript">
        // Initialize on document ready
        $(document).ready(function () {

            // Set a Latitude and Longitude
            let vatican = new google.maps.LatLng(41.903, 12.454);

            // Configure Google Map
            let mapOptions = {
                center: vatican,
                zoom: 15,
                maxZoom: 15,
                minZoom: -10,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            // Display the Google map in the prepared div container with the defined Options
            let map = new google.maps.Map(document.getElementById("mapContainer"), mapOptions);

            // Parse List of pins in C# to an Array of pins in JS
            var arrayOfPins = JSON.parse('@Html.Raw(Json.Serialize(@Model.SearchPins))');
                    
            // Loads array of pins into Map
            for (var i = 0; i < arrayOfPins.length; i++) {
                var marker = new google.maps.Marker({
                    position: { lat: arrayOfPins[i].gpsLatitude, lng: arrayOfPins[i].gpsLongitude },
                    animation: google.maps.Animation.DROP,
                    draggable: true,
                    icon: arrayOfPins[i].pinColor,
                    title: arrayOfPins[i].name,
                    map: map
                });
            }

            map.addListener('click', function (e) {
                // Get coordinates from event
                let coords = e.latLng;
                // Get placeId if a place was clicked
                let placeId = e.placeId;

                // Log coordinates in console
                console.log(`Lat: ${coords.lat()} | Lng: ${coords.lng()}`);

                // Pan the map to click position
                map.panTo(coords);
            });
        });

        @*function searchPinsByID() {
            // Remove all markers from map
            marker.setMap(null);

            // Parse List of pins in C# to an Array of pins in JS
            var arrayOfPins = JSON.parse('@Html.Raw(Json.Serialize(@Model.SearchPins))');

            // Loads array of pins into Map
            for (var i = 0; i < arrayOfPins.length; i++) {
                var marker = new google.maps.Marker({
                    position: { lat: arrayOfPins[i].gpsLatitude, lng: arrayOfPins[i].gpsLongitude },
                    animation: google.maps.Animation.DROP,
                    draggable: true,
                    icon: arrayOfPins[i].pinColor,
                    title: arrayOfPins[i].name,
                    map: map
                });
            }
        }*@
    </script>
}