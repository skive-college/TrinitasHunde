@page
@model TrinitasHunde.Pages.Admin.MapModel
@{
    ViewData["Title"] = "Map";
}

<h2>Map</h2>

<div class="container">
    <div class="row">
        <div class="col-sm-8">
            <!-- Container for google maps -->
            <div id="mapContainer" style="height:600px;"></div>

            @section Scripts {
                <!-- Import google maps (add api key here) -->
                <script src="https://maps.googleapis.com/maps/api/js"></script>

                <!-- Initialize google maps -->
                <script type="text/javascript">
                    // Initialize on document ready
                    $(document).ready(function () {

                        // Set a Latitude and Longitude
                        let vatican = new google.maps.LatLng(41.903, 12.454);

                        // Configure Google Map
                        let mapOptions = {
                            center: vatican,
                            zoom: 15,
                            maxZoom: 15,
                            minZoom: 10,
                            mapTypeId: google.maps.MapTypeId.ROADMAP
                        };

                        // Display the Google map in the prepared div container with the defined Options

                        let map = new google.maps.Map(document.getElementById("mapContainer"), mapOptions);

                        //Parse List of pins in C# to an Array of pins in JS
                        var arrayOfPins = JSON.parse('@Html.Raw(Json.Serialize(@Model.Pins))');

                        // Loads array of pins into Map
                        for (var i = 0; i < arrayOfPins.length; i++) {
                            var marker = new google.maps.Marker({
                                position: { lat: arrayOfPins[i].gpsLatitude, lng: arrayOfPins[i].gpsLongitude },
                                animation: google.maps.Animation.DROP,
                                draggable: true,
                                icon: arrayOfPins[i].pinColor,
                                title: arrayOfPins[i].name,
                                map: map
                            });
                        }

                        map.addListener('click', function (e) {
                            // Get coordinates from event
                            let coords = e.latLng;
                            // Get placeId if a place was clicked
                            let placeId = e.placeId;

                            // Log coordinates in console
                            console.log(`Lat: ${coords.lat()} | Lng: ${coords.lng()}`);

                            document.getElementById("GPSLat").value = coords.lat();
                            document.getElementById("GPSLng").value = coords.lng();

                            // Create a marker at click position
                            let marker = new google.maps.Marker({
                                position: coords,
                                animation: google.maps.Animation.DROP,
                                draggable: true,
                                icon: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png",
                                map: map
                            });

                            // Remove marker if clicked (doesn't trigger on drag)
                            marker.addListener('click', function (e) {
                                marker.setMap(null);
                            });

                            // Pan the map to click position
                            map.panTo(coords);
                        });
                    });
                </script>
            }
            </div>
            <div class="col-sm-4">
                <form method="post">
                    <label>Name</label>
                    <br />
                    <input type="text" name="Name" required />
                    <br />
                    <label>GPSLatitude</label>
                    <br />
                    <input type="text" name="GPSLat" id="GPSLat" required />
                    <br />
                    <label>GPSLongitude</label>
                    <br />
                    <input type="text" name="GPSLon" id="GPSLng" required />
                    <br />
                    <label>Location</label>
                    <br />
                    <select asp-for="@Model.LocationID">
                        @{
                            foreach (LocationType t in Model.LocationTypes)
                            {
                                <option value="@t.ID">@t.Name</option>
                            }
                        }
                    </select>
                    <br />
                    <input type="submit" />
                </form>
            </div>
        </div>
    </div>